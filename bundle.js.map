{"version":3,"sources":["webpack://keyboard/./node_modules/localforage/dist/localforage.js","webpack://keyboard/./src/constants/index.js","webpack://keyboard/./src/dom/index.js","webpack://keyboard/./src/services/localstore.js","webpack://keyboard/./src/utils/index.js","webpack://keyboard/webpack/bootstrap","webpack://keyboard/webpack/runtime/compat get default export","webpack://keyboard/webpack/runtime/define property getters","webpack://keyboard/webpack/runtime/global","webpack://keyboard/webpack/runtime/hasOwnProperty shorthand","webpack://keyboard/webpack/runtime/make namespace object","webpack://keyboard/./src/index.js"],"names":["module","exports","e","t","n","r","s","o","u","i","f","Error","code","l","call","length","1","_dereq_","global","scheduleDrain","draining","Mutation","MutationObserver","WebKitMutationObserver","called","observer","nextTick","element","document","createTextNode","observe","characterData","data","setImmediate","MessageChannel","createElement","scriptEl","onreadystatechange","parentNode","removeChild","documentElement","appendChild","setTimeout","channel","port1","onmessage","port2","postMessage","queue","oldQueue","len","task","push","this","g","self","window","2","immediate","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","Promise","resolver","TypeError","state","outcome","safelyResolveThenable","QueueItem","promise","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","func","value","returnValue","reject","resolve","getThen","obj","then","apply","arguments","thenable","onError","onSuccess","result","tryCatch","status","out","prototype","constructor","error","reason","all","iterable","Object","toString","values","Array","resolved","allResolver","outValue","race","response","3","4","_typeof","Symbol","iterator","idb","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","getIDB","createBlob","parts","properties","Blob","name","builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","append","getBlob","type","Promise$1","executeCallback","callback","executeTwoCallbacks","errorCallback","normalizeKey","key","console","warn","String","getCallback","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","READ_ONLY","READ_WRITE","_binStringToArrayBuffer","bin","buf","ArrayBuffer","arr","Uint8Array","charCodeAt","_checkBlobSupport","txn","transaction","blob","objectStore","put","onabort","preventDefault","stopPropagation","oncomplete","matchedChrome","navigator","userAgent","match","matchedEdge","parseInt","_checkBlobSupportWithoutCaching","_deferReadiness","dbInfo","dbContext","deferredOperation","deferredOperations","dbReady","_advanceReadiness","pop","_rejectReadiness","err","_getConnection","upgradeNeeded","forages","db","close","dbArgs","version","openreq","open","onupgradeneeded","createObjectStore","storeName","oldVersion","ex","newVersion","onerror","onsuccess","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","objectStoreNames","contains","isDowngrade","isUpgrade","incVersion","_decodeBlob","encodedBlob","atob","_isEncodedBlob","__local_forage_encoded_blob","_fullyReady","_initReady","_dbInfo","createTransaction","mode","retries","undefined","tx","forage","_tryReconnect","asyncStorage","_driver","_initStorage","options","ready","initPromises","ignoreErrors","j","slice","_defaultConfig","k","_support","isSafari","openDatabase","test","platform","hasFetch","fetch","indexOf","IDBKeyRange","isIndexedDBValid","iterate","req","openCursor","iterationNumber","cursor","getItem","get","setItem","blobSupport","reader","FileReader","onloadend","base64","btoa","target","readAsBinaryString","store","removeItem","clear","count","advanced","openKeyCursor","advance","keys","dropInstance","currentConfig","config","dbPromise","deleteObjectStore","_forage2","deleteDatabase","onblocked","BASE_CHARS","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","encoded1","encoded2","encoded3","encoded4","bufferLength","p","buffer","bytes","bufferToString","base64String","substring","localforageSerializer","serialize","valueType","marker","fileReader","onload","str","readAsArrayBuffer","JSON","stringify","deserialize","parse","blobType","matcher","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","createDbTable","executeSql","tryExecuteSql","sqlStatement","args","SYNTAX_ERR","results","rows","_setItem","retriesLeft","originalValue","serializer","sqlError","QUOTA_ERR","getAllStoreNames","storeNames","item","webSQLStorage","dbInfoPromise","description","size","c","operationInfo","dropTable","operations","_getKeyPrefix","defaultConfig","keyPrefix","_isLocalStorageUsable","localStorageTestKey","localStorage","checkIfLocalStorageThrows","localStorageWrapper","isLocalStorageValid","keyPrefixLength","itemKey","includes","array","searchElement","x","y","isNaN","isArray","arg","DefinedDrivers","DriverSupport","DefaultDrivers","INDEXEDDB","WEBSQL","LOCALSTORAGE","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","concat","DefaultConfig","driver","callWhenReady","localForageInstance","libraryMethod","_args","extend","_key","hasOwnProperty","localforage_js","LocalForage","driverTypeKey","instance","Constructor","_classCallCheck","driverName","defineDriver","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","replace","driverObject","complianceError","driverMethods","driverMethodName","methodNotImplementedFactory","methodName","_i","_len","optionalDriverMethod","configureMissingMethods","setDriverSupport","support","info","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","supportedDrivers","_getSupportedDrivers","setDriverToConfig","extendSelfWithDriver","_extend","oldDriverSetDone","currentDriverIndex","driverPromiseLoop","initDriver","supports","libraryMethodsAndProperties","createInstance","whiteNotes","blackNotes","addNotesToDOM","trackList","notes","selectedTrack","onListItemClick","innerHTML","forEach","note","node","setAttribute","id","classList","add","addEventListener","text","addWelcomeToDOM","title","subtitle","titleText","subtitleText","toggleClasses","flag","className","remove","deleteNote","async","filter","log","getNotes","addNote","newNote","index","sort","a","b","allNotes","preLoad","totalCount","Audio","toLowerCase","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","d","definition","defineProperty","enumerable","globalThis","Function","prop","toStringTag","getElementById","style","display","playBtn","saveBtn","clearBtn","recordBtn","refreshBtn","whiteKeys","querySelectorAll","blackKeys","track","timeout","record","metaData","white","black","file","clickKeyBoard","num","play","time","Date","valueOf","toggelButtonPress","itemId","dataset","setNotesInDom","find","clearAllTimeouts","initialTime","toggelKeyPress","scrollTop","scrollHeight","clearTimeout","btn"],"mappings":"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","file":"bundle.js","sourcesContent":["/*!\n    localForage -- Offline Storage, Improved\n    Version 1.9.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb || !idb.open) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\n        // Note: this creates issues with `window.fetch` polyfills and\n        // overrides; see:\n        // https://github.com/localForage/localForage/issues/856\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            resolve(openreq.result);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback returns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openKeyCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openKeyCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = req.onblocked = function (err) {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(err);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n","export const whiteNotes = [\n  'C',\n  'D',\n  'E',\n  'F',\n  'G',\n  'A',\n  'B',\n  'C',\n  'D',\n  'E',\n  'F',\n  'G',\n  'A',\n  'B',\n  'C',\n];\nexport const blackNotes = ['C', 'D', 'F', 'G', 'A', 'C', 'D', 'F', 'G', 'A'];\n","export const addNotesToDOM = (trackList, notes, selectedTrack, onListItemClick) => {\n  trackList.innerHTML = '';\n\n  notes.forEach((note) => {\n    const node = document.createElement('li');\n\n    node.setAttribute('data-id', note.id);\n    node.classList.add('keyboard__list__item');\n\n    if (selectedTrack == note.id) {\n      node.classList.add('keyboard__list__item--selected');\n    }\n\n    node.addEventListener('click', onListItemClick);\n\n    const text = document.createTextNode(`Track ${note.id}`);\n\n    node.appendChild(text);\n    trackList.appendChild(node);\n  });\n};\n\nexport const addWelcomeToDOM = (trackList, notes) => {\n  trackList.innerHTML = '';\n  const title = document.createElement('li');\n  const subtitle = document.createElement('li');\n\n  title.classList.add('keyboard__list__item', 'keyboard__title');\n  subtitle.classList.add('keyboard__list__item', 'keyboard__subtitle');\n\n  const titleText = document.createTextNode('Keyboard 2108');\n  const subtitleText = document.createTextNode(\n    'Play the piano tunes, record them, save them and replay them.'\n  );\n\n  title.appendChild(titleText);\n  trackList.appendChild(title);\n\n  subtitle.appendChild(subtitleText);\n  trackList.appendChild(subtitle);\n};\n\nexport const toggleClasses = (key, flag, className) => {\n  if (flag) {\n    key.classList.add(...className);\n  } else {\n    key.classList.remove(...className);\n  }\n};\n","import localforage from 'localforage';\n\nlocalforage.config({\n  name: 'spanion-keyboard',\n  storeName: 'notes',\n});\n\nexport const deleteNote = async (id) => {\n  try {\n    let notes = await localforage.getItem('key-notes');\n\n    if (!notes) {\n      return [];\n    }\n\n    if (notes.length) {\n      notes = notes.filter((n) => n.id != id);\n    }\n\n    await localforage.setItem('key-notes', [...notes]);\n\n    return notes;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getNotes = async () => {\n  try {\n    let notes = await localforage.getItem('key-notes');\n\n    if (!notes) {\n      return [];\n    }\n\n    return notes;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const addNote = async (newNote) => {\n  try {\n    let notes = await localforage.getItem('key-notes');\n\n    if (!newNote) {\n      return notes;\n    }\n\n    if (!notes) {\n      notes = [];\n    }\n\n    let index = 1;\n\n    if (notes.length) {\n      notes.sort((a, b) => a.id - b.id);\n\n      console.log(notes);\n\n      index = notes[notes.length - 1].id + 1;\n    }\n\n    const allNotes = [...notes, { id: index, notes: newNote }];\n    await localforage.setItem('key-notes', allNotes);\n\n    return allNotes;\n  } catch (err) {\n    console.log(err);\n  }\n};\n","import { whiteNotes, blackNotes } from '../constants/';\n\nexport const preLoad = () =>\n  new Promise((resolve) => {\n    try {\n      let count = 0;\n      const totalCount = whiteNotes.length + blackNotes.length;\n\n      const onload = () => {\n        count++;\n        if (count >= totalCount) {\n          resolve(true);\n        }\n      };\n\n      whiteNotes.forEach((note) => {\n        const myAudio = new Audio(`./notes/piano-${note.toLowerCase()}.wav`);\n        myAudio.addEventListener('canplaythrough', onload, false);\n      });\n\n      blackNotes.forEach((note) => {\n        const myAudio = new Audio(`./notes/piano-${note.toLowerCase()}-sharp.wav`);\n        myAudio.addEventListener('canplaythrough', onload, false);\n      });\n\n      setTimeout(() => {\n        resolve(true);\n      }, 5000);\n    } catch (error) {\n      setTimeout(() => {\n        resolve(true);\n      }, 5000);\n    }\n  });\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { addNote, deleteNote, getNotes } from './services/localstore';\nimport { addNotesToDOM, addWelcomeToDOM, toggleClasses } from './dom';\nimport { whiteNotes, blackNotes } from './constants/';\nimport { preLoad } from './utils/';\n\nconst closeLoading = () => {\n  const loader = document.getElementById('loader');\n  loader.style.display = 'none';\n};\n\n(async () => {\n  await preLoad();\n\n  closeLoading();\n\n  const trackList = document.getElementById('noteList');\n\n  const playBtn = document.getElementById('playBtn');\n  const saveBtn = document.getElementById('saveBtn');\n  const clearBtn = document.getElementById('clearBtn');\n  const recordBtn = document.getElementById('recordBtn');\n  const refreshBtn = document.getElementById('refreshBtn');\n\n  const whiteKeys = document.querySelectorAll('.keyboard__key__white');\n  const blackKeys = document.querySelectorAll('.keyboard__key__black.keyboard__key__black--real');\n\n  let track = [];\n  let timeout = 0;\n  let record = false;\n  let selectedTrack = 0;\n\n  const metaData = {\n    white: {},\n    black: {},\n  };\n  whiteNotes.forEach((note, index) => {\n    const key = `key${index}`;\n    const file = `./notes/piano-${note.toLowerCase()}.wav`;\n\n    metaData['white'][key] = { type: 'white', file, note, index };\n  });\n\n  blackNotes.forEach((note, index) => {\n    const key = `key${index}`;\n    const file = `./notes/piano-${note.toLowerCase()}-sharp.wav`;\n\n    metaData['black'][key] = { type: 'black', file, note, index };\n  });\n\n  const clickKeyBoard = (type, num) => {\n    const data = metaData[type][`key${num}`];\n    const audio = new Audio(data.file);\n    audio.play();\n\n    if (record) {\n      track.push({ data, time: new Date().valueOf() });\n    }\n  };\n\n  whiteKeys.forEach((key, index) => {\n    key.addEventListener('click', () => clickKeyBoard('white', index));\n  });\n\n  blackKeys.forEach((key, index) => {\n    key.addEventListener('click', () => clickKeyBoard('black', index));\n  });\n\n  const onListItemClick = (data) => {\n    toggelButtonPress(clearBtn, true);\n    const itemId = data.target.dataset.id;\n    selectedTrack = itemId;\n\n    setNotesInDom();\n  };\n\n  playBtn.addEventListener('click', async () => {\n    record = false;\n    toggelButtonPress(recordBtn, false);\n\n    if (selectedTrack) {\n      const notes = await getNotes();\n      const note = notes.find((n) => n.id == selectedTrack);\n\n      if (note && note.notes) {\n        track = note.notes;\n      }\n    }\n\n    if (track.length) {\n      clearAllTimeouts();\n      toggelButtonPress(playBtn, true);\n      toggelButtonPress(clearBtn, true);\n\n      const firstTrack = track[0];\n      const initialTime = firstTrack.time;\n\n      track.forEach((t, i) => {\n        const { data, time } = t;\n        timeout = setTimeout(() => {\n          const audio = new Audio(data.file);\n          audio.play();\n\n          toggelKeyPress(data, true);\n          setTimeout(() => {\n            toggelKeyPress(data, false);\n          }, 100);\n\n          if (i === track.length - 1) {\n            toggelButtonPress(playBtn, false);\n          }\n        }, time - initialTime + 200);\n      });\n    } else {\n      toggelButtonPress(clearBtn, false);\n    }\n  });\n\n  clearBtn.addEventListener('click', async () => {\n    clearAllTimeouts();\n    toggelButtonPress(recordBtn, false);\n    toggelButtonPress(clearBtn, false);\n    toggelButtonPress(playBtn, false);\n    record = false;\n    track = [];\n\n    if (selectedTrack) {\n      await deleteNote(selectedTrack);\n      selectedTrack = 0;\n      setNotesInDom();\n    }\n  });\n\n  recordBtn.addEventListener('click', () => {\n    if (selectedTrack) {\n      return;\n    }\n\n    clearAllTimeouts();\n    toggelButtonPress(playBtn, false);\n    record = !record;\n\n    if (record) {\n      track = [];\n      toggelButtonPress(clearBtn, false);\n    }\n\n    toggelButtonPress(recordBtn, record);\n  });\n\n  saveBtn.addEventListener('click', async () => {\n    if (selectedTrack) {\n      return;\n    }\n\n    clearAllTimeouts();\n\n    if (track.length) {\n      await addNote(track);\n      await setNotesInDom();\n\n      trackList.scrollTop = trackList.scrollHeight;\n    }\n  });\n\n  refreshBtn.addEventListener('click', async () => {\n    track = [];\n    record = false;\n    selectedTrack = 0;\n\n    clearAllTimeouts();\n    toggelButtonPress(playBtn, false);\n    toggelButtonPress(clearBtn, false);\n    toggelButtonPress(recordBtn, false);\n    setNotesInDom();\n  });\n\n  const clearAllTimeouts = () => {\n    while (timeout) {\n      clearTimeout(timeout--);\n    }\n  };\n\n  const toggelButtonPress = (btn, flag) => {\n    toggleClasses(btn, flag, ['keyboard__button--pressed']);\n  };\n\n  const toggelKeyPress = (data, flag) => {\n    const { type, index } = data;\n\n    if (type === 'white') {\n      toggleClasses(whiteKeys[index], flag, [\n        `keyboard__key__white__${index + 1}--pressed`,\n        'keyboard__key__white--pressed',\n      ]);\n    } else if (type === 'black') {\n      toggleClasses(blackKeys[index], flag, ['keyboard__key__black--pressed']);\n    }\n  };\n\n  const setNotesInDom = async () => {\n    try {\n      const notes = await getNotes();\n\n      if (notes.length) {\n        addNotesToDOM(trackList, notes, selectedTrack, onListItemClick);\n      } else {\n        addWelcomeToDOM(trackList);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  setNotesInDom();\n})();\n"],"sourceRoot":""}